{
  "timestamp": "2025-08-19T06:46:04.458Z",
  "operations": {
    "create": {
      "status": "PASS",
      "tests": [
        {
          "name": "Create Product (No Auth)",
          "success": true,
          "status": 401,
          "duration": 4,
          "error": "Request failed with status code 401",
          "errorData": {
            "success": false,
            "error": "Not authorized to access this route",
            "stack": "Error: Not authorized to access this route\n    at fn (D:\\WorkSpace\\nodejsBackEnd\\src\\middleware\\auth.ts:52:21)\n    at D:\\WorkSpace\\nodejsBackEnd\\src\\utils\\asyncHandler.ts:7:25\n    at Layer.handleRequest (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\lib\\route.js:117:3)\n    at handle (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\index.js:435:11)\n    at Layer.handleRequest (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\lib\\layer.js:152:17)\n    at D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\index.js:295:15\n    at processParams (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\index.js:582:12)\n    at next (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\index.js:291:5)"
          },
          "expectedStatus": 401
        },
        {
          "name": "Create Product (Customer Role)",
          "success": true,
          "status": 403,
          "duration": 148,
          "error": "Request failed with status code 403",
          "errorData": {
            "success": false,
            "error": "User role customer is not authorized to access this route",
            "stack": "Error: User role customer is not authorized to access this route\n    at D:\\WorkSpace\\nodejsBackEnd\\src\\middleware\\auth.ts:138:25\n    at Layer.handleRequest (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\lib\\route.js:157:13)\n    at D:\\WorkSpace\\nodejsBackEnd\\src\\middleware\\auth.ts:115:9\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          },
          "expectedStatus": 403
        },
        {
          "name": "Create Product (Invalid Data)",
          "success": true,
          "status": 403,
          "duration": 98,
          "error": "Request failed with status code 403",
          "errorData": {
            "success": false,
            "error": "User role customer is not authorized to access this route",
            "stack": "Error: User role customer is not authorized to access this route\n    at D:\\WorkSpace\\nodejsBackEnd\\src\\middleware\\auth.ts:138:25\n    at Layer.handleRequest (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (D:\\WorkSpace\\nodejsBackEnd\\node_modules\\router\\lib\\route.js:157:13)\n    at D:\\WorkSpace\\nodejsBackEnd\\src\\middleware\\auth.ts:115:9\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"
          },
          "expectedStatus": 403
        }
      ],
      "endpoint": "POST /products",
      "successRate": "100.0"
    },
    "read": {
      "status": "PASS",
      "tests": [
        {
          "name": "Get All Products",
          "success": true,
          "status": 200,
          "duration": 50,
          "data": {
            "success": true,
            "message": "Products retrieved successfully",
            "data": [],
            "pagination": {
              "page": 1,
              "limit": 20,
              "total": 0,
              "pages": 0
            }
          },
          "expectedStatus": 200
        }
      ],
      "endpoint": "GET /products",
      "successRate": "100.0"
    },
    "readById": {
      "status": "NOT_TESTED",
      "tests": [],
      "endpoint": "GET /products/:id"
    },
    "update": {
      "status": "NOT_TESTED",
      "tests": [],
      "endpoint": "PUT /products/:id"
    },
    "delete": {
      "status": "NOT_TESTED",
      "tests": [],
      "endpoint": "DELETE /products/:id"
    }
  },
  "overallStatus": "INCOMPLETE"
}